<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Project01Mapper">
	<select id="login" parameterType="mvo" resultType="mvo">
		select * from members where id=#{id} and pw=#{pw}
	</select>
	<select id="list" resultType="mvo">
		select * from members order by regdate desc
	</select>
	<insert id="join" parameterType="mvo">
		insert into members
		values(members_seq.nextval,#{id},#{pw},#{email},#{name},#{gender},sysdate)
	</insert>
	<select id="chkEmail" parameterType="mvo" resultType="int">
		select count(*) from members where email = #{email}
	</select>
	<update id="updateEmail" parameterType="mvo">
		update members set email = #{email} where id = #{id} 
	</update>
	<select id="chkName" parameterType="mvo" resultType="int">
		select count(*) from members where name = #{name}
	</select>
	<update id="updateName" parameterType="mvo">
		update members set name = #{name} where id = #{id} 
	</update>
	<select id="chkPw" parameterType="mvo" resultType="int">
		select count(*) from members where id = #{id} and pw = #{pw}
	</select>
	<update id="updatePw" parameterType="mvo">
		update members set pw = #{pw} where id = #{id}
	</update>
	<select id="m_list" resultType="mvo">
		select * from members order by regdate desc
	</select>
	<select id="recipe_count" resultType="int">
		select count(*) from members join recipe on members.m_idx=recipe.m_idx order by recipe.regdate desc
	</select>
	<select id="member_count" resultType="int">
		select count(*) from members order by regdate desc
	</select>
	<select id="onememberlist" parameterType="String" resultType="mvo">
		select * from members where name = #{name}
	</select>
	<select id="onerecipelist" parameterType="String" resultType="rvo">
		select * from members join recipe on members.m_idx=recipe.m_idx where name = #{name} order by recipe.regdate desc
	</select>
	<select id="findPw" parameterType="String" resultType="mvo">
		select * from members where email = #{email}
	</select>
	<update id="pwUpdate" parameterType="mvo">
		update members set pw = #{pw} where m_idx = #{m_idx}
	</update>
	
	<insert id="insert_recipe" parameterType="rvo">
		insert into recipe values (recipe_seq.nextval, #{m_idx}, #{recipe_title}, #{recipe_introduce}, #{recipe_video}, #{ca1}, #{ca2}, #{ca3}, #{ca4}, #{recipe_quant}, #{recipe_time}, #{recipe_difficulty}, #{main_image}, #{pack}, #{material}, #{orderContent}, #{finImage}, #{recipe_tip}, #{recipe_tag} , 0, 0, sysdate, sysdate, #{savepublic}, 0)
	</insert>
	
	<select id="count_recipe" parameterType="map" resultType="int">
		select count(*) from recipe
			<where>
				savepublic = 1
				<if test="a_permission != null and a_permission != ''">
					and a_permission=#{a_permission}
				</if>
				<if test="k != null and k != ''">
					and (recipe_title like '%'||#{k}||'%' or recipe_introduce like '%'||#{k}||'%' or pack like '%'||#{k}||'%' or material like '%'||#{k}||'%' or ordercontent like '%'||#{k}||'%' or recipe_tip like '%'||#{k}||'%' or recipe_tag like '%'||#{k}||'%')
				</if>
				<if test="recipe_title != null and recipe_title != ''">
					and recipe_title like '%'||#{k}||'%'
				</if>
				<if test="ca1 != null and ca1 != ''">
					and ca1=#{ca1}
				</if>
				<if test="ca2 != null and ca2 != ''">
					and ca2=#{ca2}
				</if>
				<if test="ca3 != null and ca3 != ''">
					and ca3=#{ca3}
				</if>
				<if test="ca4 != null and ca4 != ''">
					and ca4=#{ca4}
				</if>
			</where>
	</select>
	
	<select id="recipe_list" parameterType="map" resultType="rvo">
		select * from (
			select rownum as r_num, a.* from (
				select r.*, m.name as writer from recipe r, members m
					<where>
						r.m_idx = m.m_idx and savepublic = 1
						<if test="a_permission != null and a_permission != ''">
							and r.a_permission=#{a_permission}
						</if>
						<if test="k != null and k != ''">
							and (recipe_title like '%'||#{k}||'%' or recipe_introduce like '%'||#{k}||'%' or pack like '%'||#{k}||'%' or material like '%'||#{k}||'%' or ordercontent like '%'||#{k}||'%' or recipe_tip like '%'||#{k}||'%' or recipe_tag like '%'||#{k}||'%')
						</if>
						<if test="recipe_title != null and recipe_title != ''">
							and recipe_title like '%'||#{k}||'%'
						</if>
						<if test="ca1 != null and ca1 != ''">
							and r.ca1=#{ca1}
						</if>
						<if test="ca2 != null and ca2 != ''">
							and r.ca2=#{ca2}
						</if>
						<if test="ca3 != null and ca3 != ''">
							and r.ca3=#{ca3}
						</if>
						<if test="ca4 != null and ca4 != ''">
							and r.ca4=#{ca4}
						</if>
					</where>
					order by r.r_idx desc
			) a
		) where r_num between #{begin} and #{end}
	</select>
	
	<select id="view_recipe" parameterType="String" resultType="rvo">
		select r.*, m.name writer from recipe r, members m where r_idx = #{r_idx} and r.m_idx=m.m_idx
	</select>
	
	<insert id="talk_write" parameterType="tvo">
		insert into talk values(talk_seq.nextval, #{m_idx}, #{name}, #{content}, #{file_name}, #{heart}, sysdate, 0)
	</insert>
	
	<select id="talk_list" resultType="tvo">
		select * from talk order by t_idx desc
	</select>
	<select id="talk_p_list" parameterType="Map" resultType="tvo">
		select * from (
			select rownum r_num, a.* from(
				select * from talk order by t_idx desc ) a
			) where r_num between #{begin} and #{end}
	</select>
	<select id="t_count" resultType="int">
		select count(*) from talk
	</select>
	<delete id="tl_del" parameterType="String">
		delete from t_like where t_idx = #{t_idx}
	</delete>
	<delete id="t_del" parameterType="String">
	 	delete from talk_c where t_idx = #{t_idx}
	</delete>
	<delete id="talk_del" parameterType="String">
		delete from talk where t_idx = #{t_idx}
	</delete>
	<select id="t_co_count" parameterType="String" resultType="int">
		select count(*) from talk_c where t_idx = #{t_idx}
	</select>
	
	<select id="talk_view" parameterType="String" resultType="tvo">
		select * from talk where t_idx = #{t_idx}
	</select>
	
	<insert id="t_co_write" parameterType="String">
		insert into talk_c values(talk_c_seq.nextval, #{m_idx}, #{t_idx}, #{name}, #{content}, 0, sysdate)
	</insert>
	
	<delete id="t_c_del" parameterType="String">
		delete from talk_c where t_c_idx = #{t_c_idx}
	</delete>
	
	<select id="t_co_list" parameterType="String" resultType="tcvo">
		select * from talk_c where t_idx = #{t_idx}
	</select>
	<select id="get_talk_like" parameterType="tlvo" resultType="int">
		select count(*) from t_like where t_idx = #{t_idx} and m_idx = #{m_idx}
	</select>
	<insert id="talklike" parameterType="tlvo">
		insert into t_like values (t_l_seq.nextval, #{m_idx}, #{t_idx})
	</insert>
	<delete id="talkunlike" parameterType="tlvo">
		delete from t_like where m_idx = #{m_idx} and t_idx = #{t_idx}
	</delete>
	<update id="t_likeupdate" parameterType="String">
		update talk set heart = heart + 1 where t_idx = #{t_idx}
	</update>
	<update id="t_unlikeupdate" parameterType="String">
		update talk set heart = heart - 1 where t_idx = #{t_idx}
	</update>
	<select id="t_countlike" parameterType="tlvo" resultType="int">
		select count(*) from t_like where t_idx = #{t_idx}
	</select>
	<update id="rhitupdate" parameterType="rvo">
		update recipe set hit = #{hit} where r_idx = #{r_idx}
	</update>
	
	<select id="recipe_comment_list" parameterType="String" resultType="rcvo">
		select rc.*, m.name writer from recipe_c rc, members m where rc.m_idx = m.m_idx and r_idx = #{r_idx} order by r_c_idx desc
	</select>
	
	<select id="count_comment" parameterType="String" resultType="int">
		select count(*) from recipe_c where r_idx = #{r_idx}
	</select>
	
	<insert id="insert_recipe_comment" parameterType="rcvo">
		insert into recipe_c values (recipe_c_seq.nextval, #{r_idx}, #{m_idx}, #{content_}, 0, sysdate)
	</insert>
	<select id="r_list" resultType="r_vo">
		select * from recipe order by sysdate desc
	</select>
	<select id="onelistrecipe" parameterType="String" resultType="rvo">
		select * from recipe where r_idx = #{r_idx}
	</select>
	<select id="onelistmember" parameterType="String" resultType="mvo">
		select * from members where m_idx = #{m_idx}
	</select>
</mapper>




